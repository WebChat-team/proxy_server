name: Build, Push and Deploy Next.js

on:
  push:
    branches: [main]
    tags: ['v*']

env:
  REGISTRY: registry.vision-ru.ru
  IMAGE_NAME: api-vision-ru
  SSH_DIR: /home/gleb/vision

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: 18

    - name: Install dependencies
      run: npm i

    - name: Login to Docker Registry
      run: |
        echo "${{ secrets.REGISTRY_PASSWORD }}" | docker login $REGISTRY -u ${{ secrets.REGISTRY_USERNAME }} --password-stdin

    - name: Build and push Docker image
      run: |
        docker build -t $REGISTRY/$IMAGE_NAME:${{ github.sha }} .
        docker tag $REGISTRY/$IMAGE_NAME:${{ github.sha }} $REGISTRY/$IMAGE_NAME:latest
        docker push $REGISTRY/$IMAGE_NAME:${{ github.sha }}
        docker push $REGISTRY/$IMAGE_NAME:latest
        docker rmi $REGISTRY/$IMAGE_NAME:${{ github.sha }}

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest

    steps:
    - name: Deploy via SSH
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.SSH_HOST }}
        port: 2222
        username: ${{ secrets.SSH_USER }}
        key: ${{ secrets.SSH_KEY }}
        script: |
          # 1. Абсолютный путь к рабочей директории
          WORK_DIR="/home/gleb/vision"
          
          # 2. Проверка существования файла
          if [ ! -f "$WORK_DIR/docker-compose.yml" ]; then
            echo "❌ docker-compose.yml not found in $WORK_DIR"
            ls -la "$WORK_DIR"
            exit 1
          fi
          
          # 3. Авторизация в ПРАВИЛЬНОМ registry
          echo "${{ secrets.REGISTRY_PASSWORD }}" | docker login registry.vision-ru.ru -u ${{ secrets.REGISTRY_USERNAME }} --password-stdin || exit 1
          
          # 4. Основные команды с абсолютными путями
          cd "$WORK_DIR"
          docker compose -f "$WORK_DIR/docker-compose.yml" pull
          docker compose -f "$WORK_DIR/docker-compose.yml" down
          docker compose -f "$WORK_DIR/docker-compose.yml" up -d --force-recreate
          
          # 5. Проверка
          docker compose -f "$WORK_DIR/docker-compose.yml" ps